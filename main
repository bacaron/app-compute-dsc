#!/bin/bash
#PBS -k o
#PBS -l nodes=1:ppn=4,walltime=0:30:00

export PYTHONPATH=/N/u/brlife/git/nibabel:$PYTHONPATH

echo "setting miniconda path..."
unset PYTHONPATH
export PATH=/N/u/gberto/Karst/miniconda2/bin:$PATH 

echo "Check the inputs subject id"
tck_id=`jq -r '._inputs[0].meta.subject' config.json`
wmc_est_id=`jq -r '._inputs[1].meta.subject' config.json`
wmc_true_id=`jq -r '._inputs[2].meta.subject' config.json`
run=`jq -r '.run' config.json`
if [ $wmc_est_id == $tck_id -a $wmc_true_id == $tck_id ]; then
	echo "Inputs subject IDs correctly inserted"
else
	echo "Inputs subject IDs incorrectly inserted. Check them again."
	exit 1
fi

seg_est=`jq -r '.seg_est' config.json`
seg_true=`jq -r '.seg_true' config.json`
if [ $seg_est == $seg_true ]; then
	echo "Error: estimated segmentation and ground truth segmentation are the same. DSC will be 1."
	exit 1
fi

echo "tck conversion to trk"
tractogram=`jq -r '.tractogram' config.json`
t1=`jq -r '.t1' config.json`
cp $tractogram ${tck_id}_tractogram.tck
python tck2trk.py $t1 ${tck_id}_tractogram.tck -f;

echo "wmc conversion to trk"
mkdir tracts_est
python wmc2trk.py -tractogram ${tck_id}_tractogram.trk -classification $seg_est -out_dir tracts_est

if [ -z "$(ls -A -- "tracts_est")" ]; then
	echo "wmc to trk conversion failed"
	exit 1
fi

mkdir tracts_true
rm tract_name_list.txt
python wmc2trk.py -tractogram ${tck_id}_tractogram.trk -classification $seg_true -out_dir tracts_true

if [ -z "$(ls -A -- "tracts_true")" ]; then
	echo "wmc to trk conversion failed"
	exit 1
fi

echo "Computing voxel measures"
python evaluation.py -sub $tck_id -dir_est tracts_est -dir_true tracts_true

echo "Complete"
